CREATE TABLE admission (
    studentId INT AUTO_INCREMENT PRIMARY KEY,
    rollNo VARCHAR(50) NOT NULL,
    admissionNo VARCHAR(50) NOT NULL,
    courseApplied VARCHAR(255) NOT NULL,
    studentName VARCHAR(255) NOT NULL,
    fatherName VARCHAR(255) NOT NULL,
    motherName VARCHAR(255) NOT NULL,
    image VARCHAR(255) NOT NULL,
    dob DATE NOT NULL,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(100) NOT NULL,
    state VARCHAR(100) NOT NULL,
    pinCode VARCHAR(10) NOT NULL,
    schoolName VARCHAR(255) NOT NULL,
    schoolCity VARCHAR(100) NOT NULL,
    fatherOccupation VARCHAR(255) NOT NULL,
    fatherAddress VARCHAR(255) NOT NULL,
    studentEmail VARCHAR(255) NOT NULL,
    parentContact VARCHAR(15) NOT NULL,
    studentContact VARCHAR(15) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE receipt (
    id INT AUTO_INCREMENT PRIMARY KEY,
    admissionNo INT NOT NULL UNIQUE,  -- Admission Number
    ReceiptNo INT NOT NULL UNIQUE,    -- Receipt Number
    course VARCHAR(255) NOT NULL,
    studentName VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    pendingFees VARCHAR(255) NOT NULL,
    mode VARCHAR(255) NOT NULL,
    particulars VARCHAR(255) NOT NULL,
    CGST FLOAT NOT NULL,
    UTGST FLOAT NOT NULL,
    total FLOAT NOT NULL,
    amountInWords VARCHAR(255) NOT NULL,
    authSignatory VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,  -- auto generated timestamp
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP  -- auto update timestamp
);
CREATE TABLE fees_master (
    id INT AUTO_INCREMENT PRIMARY KEY,
    class VARCHAR(10) NOT NULL,                 -- 'XI' or 'XII'
    academic_year VARCHAR(10) NOT NULL,         -- e.g., '2025-26'
    total_fees DECIMAL(10,2) NOT NULL,         -- e.g., 177000.00
    lumpsum_fee DECIMAL(10,2) NOT NULL,        -- e.g., 167000.00
    gst_included BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE fee_installments (
    id INT AUTO_INCREMENT PRIMARY KEY,
    fees_master_id INT NOT NULL,
    installment_no INT NOT NULL,
    installment_name VARCHAR(50),               -- e.g., 'First Installment'
    due_date DATE NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (fees_master_id) REFERENCES fees_master(id)
);
CREATE TABLE student_fees (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    fees_master_id INT NOT NULL,
    total_fees DECIMAL(10,2) NOT NULL,
    received_fees DECIMAL(10,2) DEFAULT 0,
    refunded_fees DECIMAL(10,2) DEFAULT 0,
    pending_fees DECIMAL(10,2) GENERATED ALWAYS AS (total_fees - received_fees + refunded_fees) STORED,
    payment_status ENUM('Pending','Partial','Paid') DEFAULT 'Pending',
    last_payment_date DATE,
    remarks TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES admission(studentId),
    FOREIGN KEY (fees_master_id) REFERENCES fees_master(id)
);
ALTER TABLE receipt
ADD COLUMN admissionId INT NOT NULL AFTER id,
ADD COLUMN studentFeeId INT NOT NULL AFTER admissionId;

ALTER TABLE receipt
ADD CONSTRAINT fk_receipt_admission
FOREIGN KEY (admissionId) REFERENCES admission(studentId)
ON DELETE CASCADE
ON UPDATE CASCADE;

ALTER TABLE receipt
ADD CONSTRAINT fk_receipt_studentfees
FOREIGN KEY (studentFeeId) REFERENCES student_fees(id)
ON DELETE CASCADE
ON UPDATE CASCADE;

